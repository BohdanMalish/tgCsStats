"""
–°–µ—Ä–≤—ñ—Å –¥–ª—è –∑–∞–ø—É—Å–∫—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –º–∞—Ç—á—ñ–≤
"""
import asyncio
import os
import sys
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç—É –¥–æ —à–ª—è—Ö—É
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from src.models.user import UserDatabase
from src.services.match_monitor import MatchMonitor


async def start_match_monitoring():
    """–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –º–∞—Ç—á—ñ–≤"""
    try:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        db_path = os.path.join(project_root, "data", "users.db")
        user_db = UserDatabase(db_path)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
        bot_token = os.getenv("BOT_TOKEN")
        if not bot_token:
            print("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ Steam API –∫–ª—é—á
        steam_api_key = os.getenv("STEAM_API_KEY")
        if not steam_api_key:
            print("‚ùå STEAM_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
            return
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä
        monitor = MatchMonitor(steam_api_key, bot_token, user_db)
        
        print("üéÆ –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –º–∞—Ç—á—ñ–≤...")
        print("üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω")
        print("üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º:")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º
        users_with_monitoring = user_db.get_users_with_monitoring()
        if users_with_monitoring:
            for user in users_with_monitoring:
                print(f"   ‚Ä¢ {user.username or user.telegram_id} (Steam: {user.steam_id})")
        else:
            print("   –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º")
        
        print("\nüîÑ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–æ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏.")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
        await monitor.start_monitoring()
        
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É: {e}")


if __name__ == "__main__":
    asyncio.run(start_match_monitoring())
