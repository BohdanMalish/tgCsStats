"""
–í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ Steam OAuth callback
"""
from aiohttp import web
import logging
from urllib.parse import parse_qs, urlparse
from typing import Dict, Any
import asyncio

logger = logging.getLogger(__name__)


class WebServer:
    def __init__(self, bot_handlers, steam_api_key: str, app_domain: str, port: int = 3000):
        self.bot_handlers = bot_handlers
        self.steam_api_key = steam_api_key
        self.app_domain = app_domain
        self.port = port
        self.app = web.Application()
        self.app.router.add_get('/steam/callback', self.handle_steam_callback)
        self.app.router.add_get('/', self.handle_root)
        
    async def start_server(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"""
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {self.port}")
        logger.info(f"üåê –î–æ–º–µ–Ω: {self.app_domain}")
        logger.info(f"üîó Callback URL: https://{self.app_domain}/steam/callback")
        
        try:
            runner = web.AppRunner(self.app)
            await runner.setup()
            site = web.TCPSite(runner, '0.0.0.0', self.port)
            await site.start()
            logger.info(f"‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É {self.port}")
            logger.info("üåê –î–æ—Å—Ç—É–ø–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏:")
            logger.info("   / - –≥–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞")
            logger.info("   /steam/callback - Steam OAuth callback")
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î
            while True:
                await asyncio.sleep(1)
                
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")
            raise
        
    async def handle_root(self, request):
        """–û–±—Ä–æ–±–∫–∞ –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏"""
        logger.info(f"üìÑ –ó–∞–ø–∏—Ç –¥–æ –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏: {request.url}")
        return web.Response(text="CS2 Stats Bot - Steam OAuth Callback Server")
        
    async def handle_steam_callback(self, request):
        """–û–±—Ä–æ–±–∫–∞ Steam OAuth callback"""
        logger.info(f"üîê Steam OAuth callback –∑–∞–ø–∏—Ç: {request.url}")
        try:
            # –û—Ç—Ä–∏–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑ URL
            query_string = request.query_string
            query_params = parse_qs(query_string)
            
            # –í–∏—Ç—è–≥—É—î–º–æ user_id
            user_id = query_params.get('user_id', [None])[0]
            if not user_id:
                return web.Response(text="‚ùå –ü–æ–º–∏–ª–∫–∞: user_id –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", status=400)
            
            # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ int
            try:
                user_id = int(user_id)
            except ValueError:
                return web.Response(text="‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ–≤—ñ—Ä–Ω–∏–π user_id", status=400)
            
            # –í–∏—Ç—è–≥—É—î–º–æ Steam –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
            steam_params = {}
            for key, value in query_params.items():
                if key.startswith('openid.'):
                    steam_params[key] = value[0] if value else ''
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Steam –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            try:
                from .services.steam_oauth import SteamOAuth
            except ImportError:
                from src.services.steam_oauth import SteamOAuth
            
            steam_oauth = SteamOAuth(
                api_key=self.steam_api_key,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API –∫–ª—é—á –∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
                app_domain=self.app_domain  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–æ–º–µ–Ω –∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
            )
            
            steam_id = await steam_oauth.verify_steam_response(steam_params)
            
            if steam_id:
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
                user = self.bot_handlers.user_db.get_user(user_id)
                if not user:
                    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    from src.models.user import User
                    new_user = User(telegram_id=user_id, steam_id=steam_id)
                    success = self.bot_handlers.user_db.create_user(new_user)
                else:
                    # –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    success = self.bot_handlers.user_db.update_steam_id(user_id, steam_id)
                
                if success:
                    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—Ä–∞–≤—Ü—è
                    user_info = await steam_oauth.get_user_info(steam_id)
                    player_name = user_info.get('personaname', '–ù–µ–≤—ñ–¥–æ–º–æ') if user_info else '–ù–µ–≤—ñ–¥–æ–º–æ'
                    
                    html_response = f"""
<!DOCTYPE html>
<html>
<head>
    <title>CS2 Stats Bot - –£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è</title>
    <meta charset="utf-8">
    <style>
        body {{ font-family: Arial, sans-serif; text-align: center; padding: 50px; }}
        .success {{ color: #28a745; font-size: 24px; margin-bottom: 20px; }}
        .info {{ color: #666; margin-bottom: 30px; }}
        .button {{ background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; }}
    </style>
</head>
<body>
    <div class="success">‚úÖ –£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è!</div>
    <div class="info">
        <p>Steam ID: {steam_id}</p>
        <p>–ì—Ä–∞–≤–µ—Ü—å: {player_name}</p>
    </div>
    <p>–¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞!</p>
    <a href="https://t.me/csStatisticsBot" class="button">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –±–æ—Ç–∞</a>
</body>
</html>
"""
                    return web.Response(text=html_response, content_type='text/html')
                else:
                    return web.Response(text="‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è Steam ID", status=500)
            else:
                return web.Response(text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Steam –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó", status=400)
                
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ Steam callback: {e}")
            import traceback
            logger.error(f"Traceback: {traceback.format_exc()}")
            return web.Response(text=f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}", status=500)
