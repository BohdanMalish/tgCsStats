#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É
"""

def test_async_imports():
    """–¢–µ—Å—Ç—É—î–º–æ —ñ–º–ø–æ—Ä—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö —ñ–º–ø–æ—Ä—Ç—ñ–≤...")
    
    try:
        import asyncio
        print("‚úÖ asyncio —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É asyncio: {e}")
        return False
    
    try:
        import threading
        print("‚úÖ threading —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É threading: {e}")
        return False
    
    try:
        from aiohttp import web
        print("‚úÖ aiohttp.web —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É aiohttp.web: {e}")
        return False
    
    return True

def test_event_loop():
    """–¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è event loop"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è event loop...")
    
    try:
        import asyncio
        
        # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ event loop
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        print("‚úÖ Event loop —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –¢–µ—Å—Ç—É—î–º–æ –∑–∞–∫—Ä–∏—Ç—Ç—è
        loop.close()
        print("‚úÖ Event loop –∑–∞–∫—Ä–∏—Ç–æ —É—Å–ø—ñ—à–Ω–æ")
        
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ event loop: {e}")
        return False

def test_threading():
    """–¢–µ—Å—Ç—É—î–º–æ threading"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è threading...")
    
    try:
        import threading
        import time
        
        def test_function():
            time.sleep(0.1)
            return "test"
        
        # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É
        thread = threading.Thread(target=test_function, daemon=True)
        thread.start()
        thread.join(timeout=1)
        
        print("‚úÖ Threading –ø—Ä–∞—Ü—é—î —É—Å–ø—ñ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ threading: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É...")
    
    # –¢–µ—Å—Ç—É—î–º–æ —ñ–º–ø–æ—Ä—Ç–∏
    if not test_async_imports():
        return False
    
    # –¢–µ—Å—Ç—É—î–º–æ event loop
    if not test_event_loop():
        return False
    
    # –¢–µ—Å—Ç—É—î–º–æ threading
    if not test_threading():
        return False
    
    print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
    print("‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø—É—Å–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏")
    
    return True

if __name__ == "__main__":
    main()
